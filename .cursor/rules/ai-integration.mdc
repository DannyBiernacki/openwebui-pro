---
description: 
globs: 
alwaysApply: false
---
```mdc
---
type: auto_attached
glob_patterns:
  - "src/lib/ai/**"
  - "src/services/ai/**"
  - "**/*ai*"
  - "**/*llm*"
  - "**/*model*"
description: AI integration patterns and best practices
version: 1.0
---

# AI Integration Guidelines

## Architecture Patterns
- Local-first approach: Ollama primary, OpenAI fallback
- Hybrid routing z intelligent model selection
- Streaming responses z real-time UI updates
- Cost optimization przez local processing preference

## M4 Pro AI Capabilities
- Support dla 70B models (M4 Pro advantage)
- Concurrent request handling
- Large context windows (8K+)
- GPU acceleration enabled
## Implementation Standards
- Type-safe API integration z Fastify backend
- Proper error handling z graceful degradation
- Rate limiting i request queuing
- Performance monitoring i metrics collection
- User feedback dla processing states

## Context Management Best Practices
- Use @-symbols for precise context: @file, @folder, @code
- Implement RAG pipeline z PostgreSQL + Qdrant
- Vector search optimization dla document retrieval
- Smart suggestion generation based na document analysis

## Ollama + OpenAI Integration
- Health check system dla model availability
- Automatic fallback mechanisms
- Cost tracking i usage analytics
- Response caching strategies

## Streaming Implementation
- WebSocket dla real-time responses
- Typewriter effect dla user experience
- Progress indicators dla long operations
- Error handling z retry logic

# Professional AI Integration Standards

## AI Component Standards
All AI components MUST use shadcn/ui base:

```typescript
// âœ… PROFESSIONAL - AI Streaming with shadcn/ui
import { Card, CardHeader, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"

export const AIStreamingCard = ({ content, isStreaming, model }: Props) => (
  <Card className="w-full">
    <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
      <div className="flex items-center space-x-2">
        <Badge variant={isStreaming ? "default" : "secondary"}>
          {model}
        </Badge>
        {isStreaming && (
          <div className="w-2 h-2 bg-primary rounded-full animate-pulse" />
        )}
      </div>
    </CardHeader>
    <CardContent>
      <div className="prose dark:prose-invert max-w-none">
        {content}
      </div>
    </CardContent>
  </Card>
)
```

## AI UX Patterns (shadcn/ui based)
- **Progress Indicators**: Use shadcn/ui Progress component
- **Status Badges**: Use shadcn/ui Badge with variants
- **Action Buttons**: Use shadcn/ui Button with loading states
- **Response Cards**: Use shadcn/ui Card with proper structure

## M4 Pro AI Optimizations
- Support dla 70B models (M4 Pro advantage)
- Concurrent request handling
- Real-time streaming with shadcn/ui components
- Professional loading states and error boundaries
```
